# Copyright MediaZ Teknoloji A.S. All Rights Reserved.

# This is a basic workflow to help you get started with Actions

name: Modules Releases

# Controls when the workflow will run
on:
  push:
    branches: [ dev ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      build_all:
        description: 'Build all modules'
        required: false
        default: 'false'
      nodos_sdk_version:
        description: 'Nodos SDK Version'
        required: false
        default: ''
      clean:
        description: 'Clean build'
        required: false
        default: "false"

env:
  BUILD_NUMBER: ${{ github.run_number }}
  GH_USERNAME: "mediaz-bot"
  GH_RELEASE_REPO_URL: "https://github.com/mediaz/modules-releases"
  GH_RELEASE_REPO_ORG: "mediaz"
  GH_RELEASE_REPO_NAME: "modules-releases"
  GIT_EMAIL: "bot@nodos.dev"
  GH_TOKEN: ${{ secrets.CI_TOKEN }}
  DIST_TARGET_DIR: "D:/Builds/Nodos-Modules"

# TODO: Support parallel runs
concurrency:
  group: single # For now, allow 1 run at a time.
  cancel-in-progress: false # Queue up runs if one is already in progress.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Module Releases
    runs-on: self-hosted
    steps:
      - name: Update Git Credentials
        continue-on-error: true
        shell: bash
        run: |
          git credential-manager github login --username ${{ env.GH_USERNAME }} --token ${{ env.GH_TOKEN }} --force
          mkdir -p ./modules-${{ github.ref_name }}

      - name: Checkout
        shell: pwsh
        run: |
          if (-not (Test-Path -Path ./modules-repo)) {
            git clone --branch ${{ github.ref_name }} --depth 1 https://github.com/${{ github.repository }}.git --recurse-submodule --shallow-submodules ./modules-repo
          }
          cd ./modules-repo
          git fetch origin
          git checkout ${{ github.ref_name }}
          git clean -ffd
          git restore .
          git pull --force
          git submodule update --force --recursive --init
          git status
        working-directory: ./modules-${{ github.ref_name }}

      - name: Setup Git
        run: |
          git config user.email "${{ env.GIT_EMAIL }}"
          git config user.name "${{ env.GH_USERNAME }}"
        working-directory: ./modules-${{ github.ref_name }}/modules-repo

      - name: Clean
        shell: pwsh
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.clean == 'true' }}
        run: |
          git clean -ffdx
          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue ../Project
        working-directory: ./modules-${{ github.ref_name }}/modules-repo

      - name: Cleanup
        run: |
          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue Nodos-SDK*
          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue ./workspace
        shell: pwsh
        working-directory: ./modules-${{ github.ref_name }}

      - name: Download Nodos SDK (Latest dev)
        shell: pwsh
        if: ${{  github.event_name != 'workflow_dispatch' || github.event.inputs.nodos_sdk_version == '' }}
        run: |
          $ReleaseTag = (gh release list --repo mediaz/nodos | Select-String -Pattern 'dev' | Select-Object -First 1).Line.Split()[0]
          gh release download $ReleaseTag --repo mediaz/nodos --pattern "Nodos-SDK-*.zip"
        working-directory: ./modules-${{ github.ref_name }}

      - name: Unzip Nodos SDK
        run: |
          7z x Nodos-SDK-*.zip -oworkspace
        working-directory: ./modules-${{ github.ref_name }}

      - name: Move Repo Under Workspace
        run: |
          Move-Item -Path ./modules-repo -Destination ./workspace/Module/modules-repo
        shell: pwsh
        working-directory: ./modules-${{ github.ref_name }}
  
      - name: Configure
        run: |
          cmake -S ./Toolchain/CMake -B ../Project -DCMAKE_BUILD_TYPE=Release
        working-directory: ./modules-${{ github.ref_name }}/workspace

      - name: Build
        run: |
          cmake --build ../Project --config Release -j 4
        working-directory: ./modules-${{ github.ref_name }}/workspace

      - name: Release (Changed)
        if: ${{ github.event.inputs.build_all == null || github.event.inputs.build_all == 'false'}}
        shell: bash
        run: |
          LAST_BUILD_TAG=$(git for-each-ref --sort=-v:refname --format='%(refname:short)' 'refs/tags/build.${{ github.ref_name }}-*' | head -n 1)
          ../../nosman.exe --workspace ../../ publish-batch --repo-path . --compare-with "$LAST_BUILD_TAG" --vendor Nodos --version-suffix ".b${{ env.BUILD_NUMBER }}"
        working-directory: ./modules-${{ github.ref_name }}/workspace/Module/modules-repo
      
      - name: Release (All)
        if: ${{ github.event.inputs.build_all == 'true' }}
        shell: pwsh
        run: |
          ../../nosman.exe --workspace ../../ publish-batch --repo-path . --vendor=Nodos --version-suffix ".b${{ env.BUILD_NUMBER }}"
        working-directory: ./modules-${{ github.ref_name }}/workspace/Module/modules-repo
      
      - name: Tag
        run: |
          git tag -a "build.${{ github.ref_name }}-${{ env.BUILD_NUMBER }}" -m "Build ${{ github.ref_name }}-${{ env.BUILD_NUMBER }}"
          git push origin "build.${{ github.ref_name }}-${{ env.BUILD_NUMBER }}"
        working-directory: ./modules-${{ github.ref_name }}/workspace/Module/modules-repo
      
      - name: Move Back
        run: |
          Move-Item -Path ./workspace/Module/modules-repo -Destination .
        shell: pwsh
        working-directory: ./modules-${{ github.ref_name }}