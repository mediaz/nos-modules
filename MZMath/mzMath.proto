syntax = "proto3";

package mz.math;

import "ProtoCommon.proto";

message Add
{
    option (mz.proto.job_type)            = CPU;
    option (mz.proto.job_source_file)     = "mzMath";
    option (mz.proto.job_entry_point)     = "Add";
    option (mz.proto.template_parameters) = "{T}";
    option (mz.proto.job_display_name)    = "Add";
    
    float X = 1 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY];
    float Y = 2 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY];
    float Z = 3 [ (mz.proto.pin_show_as)     = OUTPUT_PIN,
                  (mz.proto.pin_can_show_as) = OUTPUT_PIN_ONLY,
                  (mz.proto.pin_category) = "catA" ];
}

message Sub
{
    option (mz.proto.job_type)            = CPU;
    option (mz.proto.job_source_file)     = "mzMath";
    option (mz.proto.job_entry_point)     = "Sub";
    option (mz.proto.template_parameters) = "{T}";
    option (mz.proto.job_display_name)    = "Sub";

    float X = 1 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY];
    float Y = 2 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY];
    float Z = 3 [ (mz.proto.pin_show_as)     = OUTPUT_PIN,
                  (mz.proto.pin_can_show_as) = OUTPUT_PIN_ONLY];
}

message Mul
{
    option (mz.proto.job_type)            = CPU;
    option (mz.proto.job_source_file)     = "mzMath";
    option (mz.proto.job_entry_point)     = "Mul";
    option (mz.proto.template_parameters) = "{T}";
    option (mz.proto.job_display_name)    = "Mul";

    float X = 1 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{T}" ];
    float Y = 2 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{T}" ];
    float Z = 3 [ (mz.proto.pin_show_as)     = OUTPUT_PIN,
                  (mz.proto.pin_can_show_as) = OUTPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{T}" ];
}

message Div
{
    option (mz.proto.job_type)            = CPU;
    option (mz.proto.job_source_file)     = "mzMath";
    option (mz.proto.job_entry_point)     = "Div";
    option (mz.proto.template_parameters) = "{T}";
    option (mz.proto.job_display_name)    = "Div";

    float X = 1 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{T}" ];
    float Y = 2 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{T}" ];
    float Z = 3 [ (mz.proto.pin_show_as)     = OUTPUT_PIN,
                  (mz.proto.pin_can_show_as) = OUTPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{T}" ];
}

message MakeVec
{
    option (mz.proto.job_type)         = CPU;
    option (mz.proto.job_source_file)  = "mzMath";
    option (mz.proto.job_entry_point)  = "MakeVec";
    option (mz.proto.job_display_name) = "MakeVec";

    float X = 1 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{S}"  ];
    float Y = 2 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{S}"  ];
    float Z = 3 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY,
                  (mz.proto.type_name)       = "{S}"  ];
    float W = 4 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY,
                  (mz.proto.pin_category)    = "catA",
                  (mz.proto.type_name)       = "{S}"  ];
    mz.proto.vec4 V = 5 [ (mz.proto.pin_show_as)     = OUTPUT_PIN,
                          (mz.proto.pin_can_show_as) = OUTPUT_PIN_ONLY,
                          (mz.proto.type_name)       = "{V}"  ];
}

message Square
{
    option (mz.proto.job_type)         = CPU;
    option (mz.proto.job_source_file)  = "mzMath";
    option (mz.proto.job_entry_point)  = "Square";
    option (mz.proto.job_display_name) = "Square";

    float X = 1 [ (mz.proto.pin_display_name) = "Input",
                  (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_OR_PROPERTY ];
    float Z = 2 [ (mz.proto.pin_display_name) = "Output",
                  (mz.proto.pin_show_as)      = OUTPUT_PIN,
                  (mz.proto.pin_can_show_as)  = OUTPUT_PIN_ONLY ];
}

message SquareRoot
{
    option (mz.proto.job_type)         = CPU;
    option (mz.proto.job_source_file)  = "mzMath";
    option (mz.proto.job_entry_point)  = "SquareRoot";
    option (mz.proto.job_display_name) = "Square Root";

    float X = 1 [ (mz.proto.pin_display_name) = "Input",
                  (mz.proto.pin_show_as) = INPUT_PIN, 
                  (mz.proto.pin_can_show_as) = INPUT_PIN_OR_PROPERTY ];
    float Z = 2 [ (mz.proto.pin_display_name) = "Output",
                  (mz.proto.pin_show_as) = OUTPUT_PIN, 
                  (mz.proto.pin_can_show_as) = OUTPUT_PIN_ONLY ];
}
