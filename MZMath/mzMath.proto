syntax = "proto3";

package mz.math;

import "ProtoCommon.proto";

message FAdd
{
    option (mz.proto.job_type)         = CPU;
    option (mz.proto.job_source_file)  = "mzMath";
    option (mz.proto.job_entry_point)  = "FAdd";
    option (mz.proto.job_display_name) = "Adder";

    float X = 1 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY ];
    float Y = 2 [ (mz.proto.pin_display_name) = "Y",
                  (mz.proto.pin_show_as)      = INPUT_PIN,
                  (mz.proto.pin_can_show_as)  = INPUT_PIN_ONLY ];
    float Z = 3 [ (mz.proto.pin_display_name) = "Return",
                  (mz.proto.pin_show_as)      = OUTPUT_PIN,
                  (mz.proto.pin_can_show_as)  = OUTPUT_PIN_ONLY ];
}

message Square
{
    option (mz.proto.job_type)         = CPU;
    option (mz.proto.job_source_file)  = "mzMath";
    option (mz.proto.job_entry_point)  = "Square";
    option (mz.proto.job_display_name) = "Square";

    float X = 1 [ (mz.proto.pin_show_as)     = INPUT_PIN,
                  (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY ];
    float Z = 2 [ (mz.proto.pin_display_name) = "Return",
                  (mz.proto.pin_show_as)          = OUTPUT_PIN,
                  (mz.proto.pin_can_show_as)      = OUTPUT_PIN_ONLY ];
}

message SquareRoot
{
    option (mz.proto.job_type)         = CPU;
    option (mz.proto.job_source_file)  = "mzMath";
    option (mz.proto.job_entry_point)  = "SquareRoot";
    option (mz.proto.job_display_name) = "Square Root";

    float X = 1 [ (mz.proto.pin_show_as) = INPUT_PIN, (mz.proto.pin_can_show_as) = INPUT_PIN_ONLY ];
    float Z = 2 [ (mz.proto.pin_show_as) = OUTPUT_PIN, (mz.proto.pin_can_show_as) = OUTPUT_PIN_ONLY ];
}
