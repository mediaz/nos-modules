namespace nos.sys.tensor;

enum TensorElementDataType: uint
{
	ELEMENT_TYPE_UNDEFINED,
	ELEMENT_TYPE_FLOAT,
	ELEMENT_TYPE_UINT8,
	ELEMENT_TYPE_INT8,  
	ELEMENT_TYPE_UINT16,
	ELEMENT_TYPE_INT16,
	ELEMENT_TYPE_INT32,
	ELEMENT_TYPE_INT64,
	ELEMENT_TYPE_STRING,
	ELEMENT_TYPE_BOOL,
	ELEMENT_TYPE_FLOAT16,
	ELEMENT_TYPE_DOUBLE,
	ELEMENT_TYPE_UINT32,
	ELEMENT_TYPE_UINT64,
	ELEMENT_TYPE_COMPLEX64,
	ELEMENT_TYPE_COMPLEX128,
	ELEMENT_TYPE_BFLOAT16,
	ELEMENT_TYPE_FLOAT8E4M3FN,
	ELEMENT_TYPE_FLOAT8E4M3FNUZ,
	ELEMENT_TYPE_FLOAT8E5M2,
	ELEMENT_TYPE_FLOAT8E5M2FNUZ,
}

enum TensorMemoryLocation: uint
{
	MEMORY_LOCATION_CPU,
	MEMORY_LOCATION_CUDA,
	MEMORY_LOCATION_VULKAN,
}

table Tensor
{
    shape:[int64];
	memory_location:TensorMemoryLocation;
    element_type:TensorElementDataType;
    // if `shape` is [4, 3, 2], then index
    // [i, j, k] maps to data_buffer[i*3*2 + j*2 + k].
    buffer:uint64;
}