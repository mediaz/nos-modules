#version 450

layout(local_size_x = 10, local_size_y = 10) in;

layout(binding = 0, rgba8) uniform readonly image2D Input;

layout(std430, binding = 1) buffer OutputBuffer {
    float data[];
} outputBuffer;

void main() {
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 imgSize = imageSize(Input);
    int index_r = uv.x + imgSize.x*uv.y;
    int index_g = imgSize.x*imgSize.y + uv.x + imgSize.x*uv.y;
    int index_b = 2*imgSize.x*imgSize.y + uv.x + imgSize.x*uv.y;

    vec3 packed = imageLoad(Input, uv).rgb;
    outputBuffer.data[index_r] = packed.r;
    outputBuffer.data[index_g] = packed.g;
    outputBuffer.data[index_b] = packed.b;		
}
