#ifndef RGBATORGB_INCLUDED
#define RGBATORGB_INCLUDED
#define RGBAtoRGB_NAME "RGBAtoRGB"
static const char RGBAtoRGB[] = R"(//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32965470
// Cuda compilation tools, release 12.2, V12.2.91
// Based on NVVM 7.0.1
//

.version 8.2
.target sm_52
.address_size 64

	// .globl	RGBAtoRGB

.visible .entry RGBAtoRGB(
	.param .u64 RGBAtoRGB_param_0,
	.param .u32 RGBAtoRGB_param_1,
	.param .u32 RGBAtoRGB_param_2,
	.param .u32 RGBAtoRGB_param_3,
	.param .u32 RGBAtoRGB_param_4,
	.param .u64 RGBAtoRGB_param_5
)
{
	.reg .pred 	%p<10>;
	.reg .b16 	%rs<16>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<51>;


	ld.param.u64 	%rd30, [RGBAtoRGB_param_0];
	ld.param.u32 	%r16, [RGBAtoRGB_param_1];
	ld.param.u32 	%r15, [RGBAtoRGB_param_2];
	ld.param.u32 	%r17, [RGBAtoRGB_param_3];
	ld.param.u32 	%r18, [RGBAtoRGB_param_4];
	ld.param.u64 	%rd31, [RGBAtoRGB_param_5];
	cvta.to.global.u64 	%rd1, %rd31;
	cvta.to.global.u64 	%rd2, %rd30;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r22, %r20, %r19, %r21;
	mul.lo.s32 	%r1, %r22, %r15;
	shl.b32 	%r2, %r15, 1;
	mul.lo.s32 	%r3, %r18, %r17;
	mad.lo.s32 	%r4, %r2, %r3, %r1;
	add.s32 	%r23, %r4, %r15;
	setp.ge.s32 	%p1, %r23, %r16;
	shl.b32 	%r5, %r1, 2;
	mad.lo.s32 	%r24, %r15, 3, %r5;
	setp.ge.s32 	%p2, %r24, %r16;
	or.pred  	%p3, %p2, %p1;
	setp.lt.s32 	%p4, %r15, 1;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;

	cvt.s64.s32 	%rd3, %r5;
	cvt.s64.s32 	%rd4, %r1;
	cvt.s64.s32 	%rd5, %r15;
	mad.lo.s32 	%r26, %r3, %r15, %r1;
	cvt.s64.s32 	%rd6, %r26;
	cvt.s64.s32 	%rd7, %r2;
	cvt.s64.s32 	%rd8, %r4;
	and.b32  	%r32, %r15, 3;
	add.s32 	%r27, %r15, -1;
	setp.lt.u32 	%p6, %r27, 3;
	mov.u32 	%r31, 0;
	@%p6 bra 	$L__BB0_4;

	sub.s32 	%r30, %r15, %r32;
	add.s64 	%rd32, %rd1, %rd6;
	add.s64 	%rd49, %rd32, 1;
	add.s64 	%rd33, %rd1, %rd4;
	add.s64 	%rd48, %rd33, 3;
	add.s64 	%rd34, %rd2, %rd3;
	add.s64 	%rd47, %rd34, 3;
	add.s64 	%rd35, %rd1, %rd8;
	add.s64 	%rd46, %rd35, 1;

$L__BB0_3:
	ld.global.u8 	%rs1, [%rd47+-3];
	st.global.u8 	[%rd48+-3], %rs1;
	add.s64 	%rd36, %rd47, %rd5;
	ld.global.u8 	%rs2, [%rd36+-3];
	st.global.u8 	[%rd49+-1], %rs2;
	add.s64 	%rd37, %rd47, %rd7;
	ld.global.u8 	%rs3, [%rd37+-3];
	st.global.u8 	[%rd46+-1], %rs3;
	ld.global.u8 	%rs4, [%rd47+-2];
	st.global.u8 	[%rd48+-2], %rs4;
	ld.global.u8 	%rs5, [%rd36+-2];
	st.global.u8 	[%rd49], %rs5;
	ld.global.u8 	%rs6, [%rd37+-2];
	st.global.u8 	[%rd46], %rs6;
	ld.global.u8 	%rs7, [%rd47+-1];
	st.global.u8 	[%rd48+-1], %rs7;
	ld.global.u8 	%rs8, [%rd36+-1];
	st.global.u8 	[%rd49+1], %rs8;
	ld.global.u8 	%rs9, [%rd37+-1];
	st.global.u8 	[%rd46+1], %rs9;
	ld.global.u8 	%rs10, [%rd47];
	st.global.u8 	[%rd48], %rs10;
	ld.global.u8 	%rs11, [%rd36];
	st.global.u8 	[%rd49+2], %rs11;
	ld.global.u8 	%rs12, [%rd37];
	st.global.u8 	[%rd46+2], %rs12;
	add.s32 	%r31, %r31, 4;
	add.s64 	%rd49, %rd49, 4;
	add.s64 	%rd48, %rd48, 4;
	add.s64 	%rd47, %rd47, 4;
	add.s64 	%rd46, %rd46, 4;
	add.s32 	%r30, %r30, -4;
	setp.ne.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB0_3;

$L__BB0_4:
	setp.eq.s32 	%p8, %r32, 0;
	@%p8 bra 	$L__BB0_7;

	add.s64 	%rd21, %rd1, %rd8;
	cvt.s64.s32 	%rd50, %r31;
	add.s64 	%rd23, %rd1, %rd6;
	add.s64 	%rd24, %rd1, %rd4;
	add.s64 	%rd38, %rd3, %rd7;
	add.s64 	%rd25, %rd2, %rd38;
	add.s64 	%rd39, %rd5, %rd3;
	add.s64 	%rd26, %rd2, %rd39;
	add.s64 	%rd27, %rd2, %rd3;

$L__BB0_6:
	.pragma "nounroll";
	add.s64 	%rd40, %rd27, %rd50;
	ld.global.u8 	%rs13, [%rd40];
	add.s64 	%rd41, %rd24, %rd50;
	st.global.u8 	[%rd41], %rs13;
	add.s64 	%rd42, %rd26, %rd50;
	ld.global.u8 	%rs14, [%rd42];
	add.s64 	%rd43, %rd23, %rd50;
	st.global.u8 	[%rd43], %rs14;
	add.s64 	%rd44, %rd25, %rd50;
	ld.global.u8 	%rs15, [%rd44];
	add.s64 	%rd45, %rd21, %rd50;
	st.global.u8 	[%rd45], %rs15;
	add.s64 	%rd50, %rd50, 1;
	add.s32 	%r32, %r32, -1;
	setp.ne.s32 	%p9, %r32, 0;
	@%p9 bra 	$L__BB0_6;

$L__BB0_7:
	ret;

}

)";
#endif //RGBATORGB_INCLUDED